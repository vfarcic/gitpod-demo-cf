version: "1.0"
kind: pipeline
metadata:
  name: gitpod-demo-master
  description: Triggered when pushing changes to the master branch
spec:
  triggers:
  - type: git
    provider: github
    context: gitpod-git
    name: master
    repo: CHANGE_ME_REPO
    events:
    - push.heads
    pullRequestAllowForkEvents: true
    branchRegex: /^((master)$).*/gi
    verified: true
  stages:
    - release
    - deploy
  steps:
    main_clone:
      title: Cloning repository
      type: git-clone
      arguments:
        repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
        git: gitpod-git
        revision: "${{CF_BRANCH}}"
      stage: release
    build_app:
      title: Building Hugo
      image: klakegg/hugo:0.75.1-ext-alpine
      commands:
      - make build
      - cf_export REPO_PATH=$PWD
      stage: release
    build_image:
      title: Building container image
      type: build
      arguments:
        image_name: CHANGE_ME_DH_USER/devops-toolkit
        tags:
        - ${{CF_SHORT_REVISION}}
        registry: docker-hub
      stage: release
    clone_env_repo:
      title: Cloning production env. repo
      type: git-clone
      arguments:
        repo: CHANGE_ME_PROD_REPO
        git: gitpod-git
      stage: deploy
    define_production:
      image: vfarcic/argocd-pipeline:1.0.ee76b7a
      title: Defining production environment app
      working_directory: "${{clone_env_repo}}"
      commands:
      - export IMAGE_TAG="$CF_SHORT_REVISION"
      - git checkout -b $CF_REPO_NAME-$CF_SHORT_REVISION
      - cat $REPO_PATH/production.yaml | kyml tmpl -e IMAGE_TAG | tee helm/templates/$CF_REPO_NAME.yaml
      - git add .
      stage: deploy
    push_env_repo:
      title: Push production env. changes
      type: git-commit
      arguments:
        repo: CHANGE_ME_PROD_REPO
        git: gitpod-git
        commit_message: "Adding commit ${{CF_SHORT_REVISION}} from ${{CF_REPO_NAME}}"
        git_user_name: "${{CF_COMMIT_AUTHOR}}"
        working_directory: /codefresh/volume/gitpod-production
      stage: deploy
    github_pr:
      title: Creating a pull request
      type: github-pr
      working_directory: "${{clone_env_repo}}"
      arguments:
        GITHUB_TOKEN: "${{GITHUB_TOKEN}}"
        GITHUB_REPO_OWNER: "${{CF_REPO_OWNER}}"
        GITHUB_REPO_NAME: gitpod-production
        HEAD: "${{CF_REPO_NAME}}-${{CF_SHORT_REVISION}}"
        TITLE: "${{CF_SHORT_REVISION}} from ${{CF_REPO_NAME}}"
        BASE: master
      stage: deploy
